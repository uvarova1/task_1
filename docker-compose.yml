version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: web
    volumes:
      - ./app:/app/app
    environment:
      - ENV=development
    depends_on:
      - prometheus
      - db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/tech/healthcheck"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  db:
    container_name: db
    image: library/postgres:13.2
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=main_db
    restart: on-failure
    ports:
      - "5432:5432"
    command: [ "postgres", "-c", "log_statement=all", "-c", "log_destination=stderr" ]
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres", "-d", "main_db" ]
      interval: 5s
      retries: 5
    volumes:
      - ./scripts/postgres:/docker-entrypoint-initdb.d
    networks:
      - app-network

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus_config.yml"
    ports:
      - "9091:9090"
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/-/ready"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - web
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/tech/healthcheck"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge